---
rbac:
  create: true
nodeExporter:
  extraArgs:
    "collector.textfile.directory": "/srv/txt_collector"
  extraHostPathMounts:
    - name: textfile-dir
      mountPath: /srv/txt_collector
      hostPath: /var/lib/node-exporter
      readOnly: true
server:
  persistentVolume:
    existingClaim: "prometheus"
  extraHostPathMounts:
    - name: extra-certs-dir
      mountPath: /etc/etcd/pki
      hostPath: /etc/etcd/pki
      readOnly: true
alertmanager:
  persistentVolume:
    existingClaim: "alertmanager"

serverFiles:
  # alerts: |-
  #   ALERT AIRFLOW_TEMPERATURE_CEL_INVALID
  #     IF airflow_temperature_cel_threshold - airflow_temperature_cel_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of airflow_temperature_cel_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT COMMAND_TIMEOUT_INVALID
  #     IF command_timeout_threshold - command_timeout_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of command_timeout_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT CURRENT_PENDING_SECTOR_INVALID
  #     IF current_pending_sector_threshold - current_pending_sector_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of current_pending_sector_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT END_TO_END_ERROR_INVALID
  #     IF end_to_end_error_threshold - end_to_end_error_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of end_to_end_error_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT ERASE_FAIL_COUNT_INVALID
  #     IF erase_fail_count_threshold - erase_fail_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of erase_fail_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT G_SENSE_ERROR_RATE_INVALID
  #     IF g_sense_error_rate_threshold - g_sense_error_rate_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of g_sense_error_rate_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT HARDWARE_ECC_RECOVERED_INVALID
  #     IF hardware_ecc_recovered_threshold - hardware_ecc_recovered_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of hardware_ecc_recovered_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT HOST_READS_MIB_INVALID
  #     IF host_reads_mib_threshold - host_reads_mib_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of host_reads_mib_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT HOST_READS_32MIB_INVALID
  #     IF host_reads_32mib_threshold - host_reads_32mib_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of host_reads_32mib_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT HOST_WRITES_MIB_INVALID
  #     IF host_writes_mib_threshold - host_writes_mib_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of host_writes_mib_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT HOST_WRITES_32MIB_INVALID
  #     IF host_writes_32mib_threshold - host_writes_32mib_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of host_writes_32mib_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT LOAD_CYCLE_COUNT_INVALID
  #     IF load_cycle_count_threshold - load_cycle_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of load_cycle_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT MEDIA_WEAROUT_INDICATOR_INVALID
  #     IF media_wearout_indicator_threshold - media_wearout_indicator_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of media_wearout_indicator_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT NAND_WRITES_1GIB_INVALID
  #     IF nand_writes_1gib_threshold - nand_writes_1gib_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of nand_writes_1gib_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT OFFLINE_UNCORRECTABLE_INVALID
  #     IF offline_uncorrectable_threshold - offline_uncorrectable_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of offline_uncorrectable_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT POWER_CYCLE_COUNT_INVALID
  #     IF power_cycle_count_threshold - power_cycle_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of power_cycle_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT POWER_ON_HOURS_INVALID
  #     IF power_on_hours_threshold - power_on_hours_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of power_on_hours_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT PROGRAM_FAIL_COUNT_INVALID
  #     IF program_fail_count_threshold - program_fail_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of program_fail_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT RAW_READ_ERROR_RATE_INVALID
  #     IF raw_read_error_rate_threshold - raw_read_error_rate_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of raw_read_error_rate_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT REALLOCATED_SECTOR_CT_INVALID
  #     IF reallocated_sector_ct_threshold - reallocated_sector_ct_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of reallocated_sector_ct_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT REPORTED_UNCORRECT_INVALID
  #     IF reported_uncorrect_threshold - reported_uncorrect_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of reported_uncorrect_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT SATA_DOWNSHIFT_COUNT_INVALID
  #     IF sata_downshift_count_threshold - sata_downshift_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of sata_downshift_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT SPIN_RETRY_COUNT_INVALID
  #     IF spin_retry_count_threshold - spin_retry_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of spin_retry_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT SPIN_UP_TIME_INVALID
  #     IF spin_up_time_threshold - spin_up_time_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of spin_up_time_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT START_STOP_COUNT_INVALID
  #     IF start_stop_count_threshold - start_stop_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of start_stop_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT TEMPERATURE_CELSIUS_INVALID
  #     IF temperature_celsius_threshold - temperature_celsius_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of temperature_celsius_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT TOTAL_LBAS_READ_INVALID
  #     IF total_lbas_read_threshold - total_lbas_read_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of total_lbas_read_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT TOTAL_LBAS_WRITTEN_INVALID
  #     IF total_lbas_written_threshold - total_lbas_written_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of total_lbas_written_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT UDMA_CRC_ERROR_COUNT_INVALID
  #     IF udma_crc_error_count_threshold - udma_crc_error_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of udma_crc_error_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT UNSAFE_SHUTDOWN_COUNT_INVALID
  #     IF unsafe_shutdown_count_threshold - unsafe_shutdown_count_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of unsafe_shutdown_count_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT WORKLD_HOST_READS_PERC_INVALID
  #     IF workld_host_reads_perc_threshold - workld_host_reads_perc_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of workld_host_reads_perc_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT WORKLD_MEDIA_WEAR_INDIC_INVALID
  #     IF workld_media_wear_indic_threshold - workld_media_wear_indic_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of workld_media_wear_indic_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
  #   ALERT WORKLOAD_MINUTES_INVALID
  #     IF workload_minutes_threshold - workload_minutes_value > 0
  #     FOR 30s
  #     ANNOTATIONS {
  #       summary = "Abnormal state of workload_minutes_value",
  #       description = "Abnormal state on {{$labels.instance}} for disk {{$labels.name}} (current value: {{$value}})"
  #     }
