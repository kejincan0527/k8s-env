apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{template "fullname" .}}
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        component: {{template "fullname" .}}
    spec:
      containers:
      - name: logstash
        securityContext:
          privileged: false
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- range $key, $value :=  .Values.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 5044
          name: beats
          protocol: TCP
        - containerPort: 9600
          name: monitor
          protocol: TCP
      {{- range .Values.extraPorts }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
          protocol: {{ .protocol }}
      {{- end }}
        volumeMounts:
          - name: pipeline-config-volume
            mountPath: /usr/share/logstash/pipeline
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: storage-volume
            mountPath: {{ .Values.persistentVolume.mountPath }}
      volumes:
      - name: pipeline-config-volume
        configMap:
          name: {{template "fullname" .}}-pipeline
      - name: config-volume
        configMap:
          name: {{template "fullname" .}}-config
      - name: storage-volume
      {{- if .Values.persistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ template "fullname" . }}{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
