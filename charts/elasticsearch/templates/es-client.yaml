apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{template "fullname" .}}-client
  labels:
    component: {{template "fullname" .}}
    role: client
spec:
  replicas: {{ .Values.client.replicas }}
  template:
    metadata:
      labels:
        component: {{template "fullname" .}}
        role: client
    spec:
      # Elasticsearch uses a hybrid mmapfs / niofs directory by default to
      # store its indices. The default operating system limits on mmap counts
      # is likely to be too low, which may result in out of memory exceptions,
      # so we use vm.max_map_count=262144 to increase that value.
      initContainers:
      - name: sysctl
        securityContext:
          privileged: true
        image: busybox
        imagePullPolicy: {{ .Values.common.image.pullPolicy }}
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      containers:
      - name: es-client
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "{{ .Values.common.image.repository }}:{{ .Values.common.image.tag }}"
        imagePullPolicy: {{ .Values.common.image.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{template "fullname" .}}-discovery
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.client.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
        - emptyDir:
            medium: ""
          name: "storage"
