---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: v1
kind: Service
metadata:
  name: core-dns
  namespace: kube-system
  labels:
    k8s-app: core-dns
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "CoreDNS"
spec:
  selector:
    k8s-app: core-dns
  clusterIP: 10.254.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: core-dns
  namespace: kube-system
data:
  Corefile: |-
    .:53 {
        errors
        log stdout
        kubernetes cluster.local 10.254.0.0/16 {
          upstream 8.8.8.8 8.8.4.4
        }
{%- for domain, ip in domains.items() %}
        file /etc/coredns/{{ domain }}.db {{ domain }}
{%- endfor %}
        proxy . /etc/resolv.conf
        health
        cache 30
    }
{%- for domain, ip in domains.items() %}
  {{ domain }}.db: |-
    @       IN      SOA     ns.{{ domain }}. root.{{ domain }}. (
            2008082901
            28800
            14400
            3600000
            86400 )

                    IN      NS              ns.{{ domain }}.
                    IN      A               {{ ip }}
    *               IN      A               {{ ip }}
{%- endfor %}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: core-dns
  namespace: kube-system
  labels:
    k8s-app: core-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "CoreDNS"
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: core-dns
  template:
    metadata:
      labels:
        k8s-app: core-dns
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      hostNetwork: true
      containers:
      - name: "coredns"
        image: "coredns/coredns:1.0.4"
        imagePullPolicy: IfNotPresent
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 256Mi
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: core-dns
